plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.5'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'jacoco'
    id("org.sonarqube") version "4.0.0.2929"
}

group = 'com.jobsity'
version = '1.0.0'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.xerial:sqlite-jdbc:3.41.2.1'
    implementation 'org.hibernate.orm:hibernate-community-dialects'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.8"
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}


sonar {
    properties {
        property "sonar.projectKey", "clairtonluz_Jobsity-Interview"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.organization", "clairtonluz"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.login", "30fbb7b8b4bba654a57d095a7d3a55eb1e7ce53d"
    }
}
